{"ast":null,"code":"import _defineProperty from\"/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form,Button}from'react-bootstrap';import API from\"../../api/api\";import{toast}from\"react-toastify\";import Swal from'sweetalert2';import jwt_decode from\"jwt-decode\";import{setCurrentUser}from\"../../redux/actions/action\";function ChangePassword(_ref){var history=_ref.history;var _useState=useState({password:\"\",confirmPassword:\"\",userId:\"\"}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isActive=_useState6[0],setIsActive=_useState6[1];var _useState7=useState(\"Update Account Password \"),_useState8=_slicedToArray(_useState7,2),heading=_useState8[0],setHeading=_useState8[1];useEffect(function(){//getting jwt token from query params string\nvar query=new URLSearchParams(window.location.search);var uid=query.get('uid');if(uid){try{if(typeof uid==null||typeof uid==undefined){throw new Error(\"Invalid Token\");}var decoded=jwt_decode(uid);var currentTime=Date.now()/1000;if(decoded.exp<currentTime){Swal.fire({title:'Invalid/Expired  Link ',text:'This Link is Invalid/Expired, Please reset your password again !',icon:'error',confirmButtonText:'OK',confirmButtonColor:'red'}).then(function(){history.push('/forgot');});}else{setUserData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{userId:decoded.id});});}}catch(error){Swal.fire({title:'Invalid/Expired  Link ',text:'This Link is Invalid/Expired, Please reset your password again !',icon:'error',confirmButtonText:'OK',confirmButtonColor:'red'}).then(function(){history.push('/forgot');});}}},[]);function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},_defineProperty({},name,value));});setErrors(function(prevData){return _objectSpread(_objectSpread({},prevData),{},_defineProperty({},name,\"\"));});}function formIsValid(){var password=userData.password,confirmPassword=userData.confirmPassword;var errors={};if(!password)errors.password=\"*Password is required\";if(!confirmPassword)errors.confirmPassword=\"*Confirm password is required\";setErrors(errors);return Object.keys(errors).length===0;}function handleSave(event){setIsActive(true);event.preventDefault();if(!formIsValid())return;API.changePassword(userData).then(function(response){console.log(\"Change Password Response\",response);setIsActive(false);Swal.fire({title:'Change Password! ',text:'You Password Has Been Updated Successfully, Please Login Again ! ',icon:'success',confirmButtonText:'OK',confirmButtonColor:'#007bff'}).then(function(){setUserData({password:\"\",confirmPassword:\"\"});history.push(\"/login\");});}).catch(function(err){setIsActive(false);console.log(err.response.data);toast.error();Swal.fire({title:'Password Reset ! ',text:err.response.data.message,icon:'error',confirmButtonText:'OK',confirmButtonColor:'red'});});// setSaving(true);\n// saveCourse(course)\n//     .then(() => {\n//         toast.success(\"Course saved.\");\n//         history.push(\"/courses\");\n//     })\n//     .catch(error => {\n//         setSaving(false);\n//         setErrors({ onSave: error.message });\n//     });\n}return/*#__PURE__*/React.createElement(\"div\",{className:\"register-form\"},isActive?/*#__PURE__*/React.createElement(\"div\",{className:\"loading-spinner\"},/*#__PURE__*/React.createElement(\"img\",{width:\"90\",src:\"loading.gif\"}),\"  \"):/*#__PURE__*/React.createElement(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,heading),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Form,{onSubmit:handleSave},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"\",name:\"password\",value:userData.password,onChange:handleChange}),errors.password?/*#__PURE__*/React.createElement(\"div\",{className:\"form-error\"},errors.password):null),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicConfirmPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"\",name:\"confirmPassword\",value:userData.confirmPassword,onChange:handleChange}),errors.confirmPassword?/*#__PURE__*/React.createElement(\"div\",{className:\"form-error\"},errors.confirmPassword):null),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Update Password\")),/*#__PURE__*/React.createElement(\"br\",null));}export default ChangePassword;","map":{"version":3,"sources":["/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/src/components/changePassword/PasswordLess.js"],"names":["React","useEffect","useState","Form","Button","API","toast","Swal","jwt_decode","setCurrentUser","ChangePassword","history","password","confirmPassword","userId","userData","setUserData","errors","setErrors","isActive","setIsActive","heading","setHeading","query","URLSearchParams","window","location","search","uid","get","undefined","Error","decoded","currentTime","Date","now","exp","fire","title","text","icon","confirmButtonText","confirmButtonColor","then","push","prevState","id","error","handleChange","event","target","name","value","prevData","formIsValid","Object","keys","length","handleSave","preventDefault","changePassword","response","console","log","catch","err","data","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nimport { setCurrentUser } from \"../../redux/actions/action\"\nfunction ChangePassword({ history }) {\n    const [userData, setUserData] = useState({ password: \"\",confirmPassword:\"\",userId:\"\"});\n    const [errors, setErrors] = useState({});\n    const [isActive,setIsActive] = useState(false);\n    const [heading,setHeading] = useState(\"Update Account Password \")\n  \n    useEffect(()=>{\n        //getting jwt token from query params string\n        const query = new URLSearchParams(window.location.search);\n        const uid = query.get('uid')\n        if(uid){\n            try{\n                if(typeof uid == null || typeof uid ==undefined){\n                    throw new Error(\"Invalid Token\")\n                }\n                const decoded = jwt_decode(uid);\n                const currentTime = Date.now() / 1000;\n                if (decoded.exp < currentTime) {\n                    Swal.fire({\n                        title: 'Invalid/Expired  Link ',\n                        text: 'This Link is Invalid/Expired, Please reset your password again !' ,\n                        icon: 'error',\n                        confirmButtonText: 'OK',\n                        confirmButtonColor:'red'\n                      }).then(()=>{\n                         history.push('/forgot')\n                      })\n                }\n                else{\n                  \n                    setUserData(prevState => ({\n                        ...prevState,\n                        userId: decoded.id,\n                    }))\n                   \n                }\n            }\n            catch(error){\n                Swal.fire({\n                    title: 'Invalid/Expired  Link ',\n                    text: 'This Link is Invalid/Expired, Please reset your password again !' ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  }).then(()=>{\n                      history.push('/forgot')\n                  })\n            }\n        }\n    },[])\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setUserData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n        setErrors(prevData => ({\n            ...prevData,\n            [name]: \"\"\n        }));\n    }\n    function formIsValid() {\n        const {  password,confirmPassword } = userData;\n        const errors = {};\n    \n        if (!password) errors.password = \"*Password is required\";\n        if (!confirmPassword) errors.confirmPassword = \"*Confirm password is required\"\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    }\n\n    function handleSave(event) {\n        setIsActive(true)\n        event.preventDefault();\n       \n        if (!formIsValid()) return;\n        API.changePassword(userData)\n            .then((response) => {\n                console.log(\"Change Password Response\",response)\n                setIsActive(false)\n                Swal.fire({\n                    title: 'Change Password! ',\n                    text: 'You Password Has Been Updated Successfully, Please Login Again ! ',\n                    icon: 'success',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'#007bff'\n                  }).then(()=>{\n                    setUserData({password: \"\",confirmPassword:\"\" });\n                    history.push(\"/login\");\n              })\n            })\n            .catch((err) => {\n                setIsActive(false)\n                console.log(err.response.data);\n                toast.error()\n                Swal.fire({\n                    title: 'Password Reset ! ',\n                    text: err.response.data.message ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  })\n            })\n        // setSaving(true);\n        // saveCourse(course)\n        //     .then(() => {\n        //         toast.success(\"Course saved.\");\n        //         history.push(\"/courses\");\n        //     })\n        //     .catch(error => {\n        //         setSaving(false);\n        //         setErrors({ onSave: error.message });\n        //     });\n    }\n\n    return (\n        <div className=\"register-form\">\n              {isActive ?  <div className='loading-spinner'><img width=\"90\" src=\"loading.gif\"/>  </div>: <div className='loading-spinner'></div>}\n              <br/>\n            <h3>{heading}</h3>\n            <hr/>\n            <Form onSubmit={handleSave}>\n                \n            <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"\"\n                        name=\"password\"\n                        value={userData.password}\n                        onChange={handleChange}\n                    />\n                    {errors.password ? <div className=\"form-error\">{errors.password}</div> : null}\n                </Form.Group>\n                <Form.Group controlId=\"formBasicConfirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"\"\n                        name=\"confirmPassword\"\n                        value={userData.confirmPassword}\n                        onChange={handleChange}\n                    />\n                    {errors.confirmPassword ? <div className=\"form-error\">{errors.confirmPassword}</div> : null}\n                </Form.Group>\n               \n              \n               \n                <Button variant=\"primary\" type=\"submit\">\n                   Update Password \n                </Button>\n            </Form>\n            <br/>\n          \n        </div>\n    )\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}