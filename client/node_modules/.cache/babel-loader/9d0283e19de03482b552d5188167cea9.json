{"ast":null,"code":"import _regeneratorRuntime from\"/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getOrders),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(actionOrder);import{put,takeLatest}from'redux-saga/effects';import jwt_decode from\"jwt-decode\";import API from\"../../api/api\";function getOrders(userData){var json;return _regeneratorRuntime.wrap(function getOrders$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return API.getOrders(userData.userData).then(function(res){return res;}).catch(function(err){throw err.response.data;});case 3:json=_context.sent;_context.next=6;return put({type:\"SET_ORDERS\",json:json});case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put({type:'SET_CURRENT_USER_FAILED',error:_context.t0});case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}export default function actionOrder(){return _regeneratorRuntime.wrap(function actionOrder$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest('GET_ORDERS',getOrders);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/src/redux/sagas/ordersSaga.js"],"names":["getOrders","actionOrder","put","takeLatest","jwt_decode","API","userData","then","res","catch","err","response","data","json","type","error"],"mappings":"kOAIUA,S,iDAoBeC,W,EAxBzB,OAASC,GAAT,CAAcC,UAAd,KAAgC,oBAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CAEA,QAAUL,CAAAA,SAAV,CAAoBM,QAApB,6JAEqB,MAAMD,CAAAA,GAAG,CAACL,SAAJ,CAAcM,QAAQ,CAACA,QAAvB,EACdC,IADc,CACT,SAAAC,GAAG,CAAI,CAAC,MAAQA,CAAAA,GAAR,CACb,CAFc,EAGdC,KAHc,CAGR,SAAAC,GAAG,CAAI,CACV,KAAMA,CAAAA,GAAG,CAACC,QAAJ,CAAaC,IAAnB,CACH,CALc,CAAN,CAFrB,OAEcC,IAFd,+BAQQ,MAAMX,CAAAA,GAAG,CAAC,CACNY,IAAI,CAAE,YADA,CAEND,IAAI,CAAEA,IAFA,CAAD,CAAT,CARR,uGAcQ,MAAMX,CAAAA,GAAG,CAAC,CACNY,IAAI,CAAE,yBADA,CAENC,KAAK,YAFC,CAAD,CAAT,CAdR,oEAoBA,cAAe,SAAUd,CAAAA,WAAV,2IACX,MAAME,CAAAA,UAAU,CAAC,YAAD,CAAeH,SAAf,CAAhB,CADW","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport jwt_decode from \"jwt-decode\";\nimport API from \"../../api/api\";\n\nfunction* getOrders(userData) {\n    try {\n        const json = yield API.getOrders(userData.userData)\n            .then(res => {return (res);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_ORDERS\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n}\nexport default function* actionOrder() {\n    yield takeLatest('GET_ORDERS', getOrders)\n}\n"]},"metadata":{},"sourceType":"module"}