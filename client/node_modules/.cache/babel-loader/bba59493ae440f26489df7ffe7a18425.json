{"ast":null,"code":"import _objectWithoutProperties from\"/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from\"react-router-dom\";import{connect}from'react-redux';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,isAuthenticated=_ref.isAuthenticated,rest=_objectWithoutProperties(_ref,[\"component\",\"isAuthenticated\"]);return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return isAuthenticated===true?/*#__PURE__*/React.createElement(Component,props):/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}}));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.userReducer.isAuthenticated};};export default connect(mapStateToProps,null)(PrivateRoute);","map":{"version":3,"sources":["/Users/abdulmutaalazhar/Downloads/Quick-Mern-Project-heroku/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRoute","Component","component","isAuthenticated","rest","props","mapStateToProps","state","userReducer"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UACNC,CAAAA,SADM,MACjBC,SADiB,CAEjBC,eAFiB,MAEjBA,eAFiB,CAGdC,IAHc,mFAKb,oBAAC,KAAD,kBACQA,IADR,EAEI,MAAM,CAAE,gBAAAC,KAAK,QACTF,CAAAA,eAAe,GAAK,IAApB,cACI,oBAAC,SAAD,CAAeE,KAAf,CADJ,cAGQ,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAJC,EAFjB,GALa,EAArB,CAiBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCJ,eAAe,CAAEI,KAAK,CAACC,WAAN,CAAkBL,eADH,CAAZ,EAAxB,CAIA,cAAeJ,CAAAA,OAAO,CAACO,eAAD,CAAkB,IAAlB,CAAP,CAA+BN,YAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    ...rest\n}) => (\n        <Route\n            {...rest}\n            render={props =>\n                isAuthenticated === true ? (\n                    <Component {...props} />\n                ) : (\n                        <Redirect to=\"/\" />\n                    )\n            }\n        />\n    );\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.userReducer.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, null)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}